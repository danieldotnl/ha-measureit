{
  "config": {
    "step": {
      "user": {
        "title": "Choose what you want to measure (what)",
        "description": "Thank you for setting up MeasureIt!\nIf you need help with the configuration have a look at the [readme](https://github.com/danieldotnl/ha-measureit) or ask a question on the [community forum](https://community.home-assistant.io/t/measureit-measure-all-you-need-based-on-time-and-templates/660614).\n\nChoose what you want to measure:\n**Time:** Measure the elapsed time while conditions are met.\n**Source:** Measure the state changes of a source entity, while conditions are met.\n**Counter:** Measure the number of times something (described in a template) occurs, while conditions are met.",
        "menu_options": {
          "time": "Time",
          "source": "Source",
          "count": "Counter"
        }
      },
      "time": {
        "title": "Configure time meter (what)",
        "description": "Provide a name for this configuration. It is used for sensor names and logging.",
        "data": {
          "config_name": "Configuration name"
        }
      },
      "source": {
        "title": "Configure source meter (what)",
        "description": "Provide a name for this configuration and a source entity. The name is used for sensor names and logging.",
        "data": {
          "config_name": "Configuration name",
          "source_entity": "Source entity"
        }
      },
      "count": {
        "title": "Configure a counting meter (what)",
        "description": "Configure the configuration name (used for sensor names and logging) and the counter template.",
        "data": {
          "config_name": "Configuration name",
          "counter_template": "Counter template:"
        }
      },
      "when": {
        "title": "When do you want to measure? (when)",
        "description": "Configure an optional condition (template). We will only measure when this template evaluates to `True`.\nThen configure the days and time when you want to measure. *Default: always measure.*\nWhen the *from* is later than the *till* time, it is assumed that the time window crosses midnight.",
        "data": {
          "condition": "Condition template:",
          "when_days": "Days:",
          "when_from": "From time:",
          "when_till": "Till time:"
        }
      },
      "sensors": {
        "title": "Configure the sensors (how)",
        "description": "Configure the sensors. When in doubt, stick to the defaults. Individual sensor settings can be adjusted after this setup via 'configure'.\n\n**Reset periods:** Select the periods you want to measure (when the meter will reset). Each period becomes a separate sensor.\n**Value template:** A template that is applied on the output of the sensor. Use `value` to refer to the sensor state.\n**Unit of measurement:** The unit of what your are measuring. E.g.: m3\n**Device class:** Find more about device classes [here](https://www.home-assistant.io/integrations/sensor/#device-class).\n**State class**: Find more about state classes [here](https://developers.home-assistant.io/docs/core/entity/sensor/#available-state-classes).",
        "data": {
          "periods": "Reset periods:",
          "unit_of_measurement": "Unit of measurement",
          "value_template": "Value template:",
          "state_class": "State class",
          "device_class": "Device class"
        }
      },
      "thank_you": {
        "title": "Thank you for setting up MeasureIt!",
        "description": "Did you know that I'm incredibly motivated by coffee? ‚òï\nIf you like using MeasureIt, please consider buying me a coffee!\nhttps://www.buymeacoffee.com/danieldotnl üôè"
      }
    },
    "error": {
      "tw_days_minimum": "Select at least one day to measure."
    }
  },
  "options": {
    "step": {
      "init": {
        "title": "Pick an action",
        "menu_options": {
          "edit_main": "Edit the main configuration",
          "add_sensors": "Add new sensors",
          "remove_sensor": "Remove a sensor",
          "select_edit_sensor": "Edit a sensor configuration"
        }
      },
      "add_sensors": {
        "title": "Add sensor(s)",
        "description": "Add and configure one or more sensors. When in doubt, stick to the defaults.\n\n**Reset periods:** Select the periods you want to measure (when the meter will reset). Each period becomes a separate sensor.\n**Value template:** A template that is applied on the output of the sensor. Use `value` to refer to the sensor state.\n**Unit of measurement:** The unit of what your are measuring. E.g.: m3\n**Device class:** Find more about device classes [here](https://www.home-assistant.io/integrations/sensor/#device-class).\n**State class**: Find more about state classes [here](https://developers.home-assistant.io/docs/core/entity/sensor/#available-state-classes).",
        "data": {
          "period": "Reset periods:",
          "unit_of_measurement": "Unit of measurement",
          "value_template": "Value template:",
          "state_class": "State class",
          "device_class": "Device class"
        }
      },
      "edit_main": {
        "title": "Configure an optional condition (template). We will only measure when this template evaluates to `True`.\nThen configure the days and time when you want to measure. *Default: always measure.*\nWhen the *from* is later than the *till* time, it is assumed that the time window crosses midnight.",
        "data": {
          "condition": "Condition template:",
          "when_days": "Days:",
          "when_from": "From time:",
          "when_till": "Till time:"
        }
      },
      "thank_you": {
        "title": "Thank you for setting up MeasureIt!",
        "description": "Did you know that I'm incredibly motivated by coffee? ‚òï\nIf you like using MeasureIt, please consider buying me a coffee!\nhttps://www.buymeacoffee.com/danieldotnl üôè"
      },
      "edit_sensor": {
        "title": "Edit sensor",
        "description": "Edit the configuration of the selected sensor.",
        "data": {
          "unit_of_measurement": "Unit of measurement:",
          "value_template": "Value template:",
          "state_class": "State class",
          "device_class": "Device class"
        }
      },
      "remove_sensor": {
        "title": "Remove sensor(s)",
        "description": "Select the sensors you want to remove."
      }
    },
    "error": {
      "tw_days_minimum": "Select at least one day to measure.",
      "uom_with_device_class_update": "Updating the unit of measurement is not allowed when a device class is set. Remove the sensor and add a new one."
    }
  },
  "selector": {
    "day_selector": {
      "options": {
        "0": "Monday",
        "1": "Tuesday",
        "2": "Wednesday",
        "3": "Thursday",
        "4": "Friday",
        "5": "Saturday",
        "6": "Sunday"
      }
    },
    "period_selector": {
      "options": {
        "5m": "5 Minutes",
        "hour": "Hour",
        "day": "Day",
        "week": "Week",
        "month": "Month",
        "year": "Year",
        "noreset": "Manual/no reset",
        "session": "After each session"
      }
    }
  },
  "services": {
    "reset": {
      "name": "Reset a MeasureIt sensor",
      "description": "Reset one or more MeasureIt sensors at a given time. If no time is given, the sensor will be reset immediately.",
      "fields": {
        "reset_datetime": {
          "name": "Reset datetime",
          "description": "The time when the sensor should be reset. If no time is given, the sensor will be reset immediately."
        }
      }
    }
  }
}
